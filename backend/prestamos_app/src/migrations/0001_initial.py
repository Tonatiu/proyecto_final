# Generated by Django 2.2.5 on 2019-10-27 22:57

from django.db import migrations, models
import src.custom_types


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Articulo',
            fields=[
                ('idarticulo', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('nombrearticulo', models.CharField(db_column='nombreArticulo', max_length=250)),
                ('descripcion', models.CharField(blank=True, max_length=1000, null=True)),
                ('cantidad', models.IntegerField()),
                ('costo', models.FloatField()),
                ('eliminado', models.BooleanField()),
            ],
            options={
                'db_table': 'articulo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('idcart', models.AutoField(db_column='idStock', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'cart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('idcategoria', models.AutoField(db_column='idCategoria', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'categoria',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contacto',
            fields=[
                ('idcontacto', models.AutoField(db_column='idContacto', primary_key=True, serialize=False)),
                ('telefono', models.CharField(max_length=300)),
                ('email', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'contacto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cuenta',
            fields=[
                ('idcuenta', models.AutoField(db_column='idCuenta', primary_key=True, serialize=False)),
                ('fechaingreso', models.DateTimeField(db_column='fechaIngreso')),
                ('activa', models.BooleanField(db_column='activa')),
                ('eliminado', models.BooleanField(db_column='eliminado')),
                ('fechasalida', models.DateTimeField(blank=True, db_column='fechaSalida', null=True)),
            ],
            options={
                'db_table': 'cuenta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Direccion',
            fields=[
                ('iddireccion', models.AutoField(db_column='idDireccion', primary_key=True, serialize=False)),
                ('cp', models.IntegerField(blank=True, null=True)),
                ('idestado', models.IntegerField(blank=True, db_column='idEstado', null=True)),
                ('idmunicipio', models.IntegerField(blank=True, db_column='idMunicipio', null=True)),
                ('idasentamiento', models.IntegerField(blank=True, db_column='idAsentamiento', null=True)),
            ],
            options={
                'db_table': 'direccion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Foto',
            fields=[
                ('idfoto', models.AutoField(db_column='idfoto', primary_key=True, serialize=False)),
                ('url', models.CharField(max_length=450)),
            ],
            options={
                'db_table': 'foto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('idkeyword', models.AutoField(db_column='idKeyWord', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'keyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('idpersona', models.AutoField(db_column='idPersona', primary_key=True, serialize=False)),
                ('nombres', src.custom_types.EncryptedField(max_length=300)),
                ('primerapellido', src.custom_types.EncryptedField(db_column='primerApellido', max_length=300)),
                ('segundoapellido', src.custom_types.EncryptedField(blank=True, db_column='segundoApellido', max_length=300, null=True)),
                ('birthdate', models.DateField(db_column='birthDate')),
            ],
            options={
                'db_table': 'persona',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('idstock', models.AutoField(db_column='idStock', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'stock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tipousuario',
            fields=[
                ('idtipousuario', models.AutoField(db_column='idTipoUsuario', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tipousuario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('idusuario', models.AutoField(db_column='idUsuario', primary_key=True, serialize=False)),
                ('alias', models.CharField(max_length=45)),
                ('email', src.custom_types.EncryptedField(db_column='email', max_length=300, unique=True)),
                ('passwd', src.custom_types.EncryptedField(db_column='passwd', max_length=300)),
                ('eliminado', models.BooleanField()),
            ],
            options={
                'db_table': 'usuario',
                'managed': False,
            },
        ),
    ]
